"use strict";import{warn,panic_if_undefined,expect_true}from"./assert.js";import{Bird}from"./bird.js";export function Observation(a={}){var b=Math.round;if(panic_if_undefined(a.date,a.bird),!(a.date instanceof Date))return warn("Invalid date for the observation."),!1;const c=(a.date.getHours()+"").padStart(2,"0")+":"+(a.date.getMinutes()+"").padStart(2,"0"),d=a.date.getDate()+". "+(new Intl.DateTimeFormat("fi-FI",{month:"long"}).format(a.date)+"ta ")+a.date.getFullYear(),e=Object.freeze({bird:a.bird,date:a.date,unixTimestamp:b(a.date.getTime()/1e3),dateString:d,timeString:c});return e}Observation.test=()=>{const a=new Date(1567214553700),b=Bird({species:"Test1",family:"Test2",order:"Test3",thumbnailUrl:"Test4"}),c=Observation({bird:b,date:a}),d=Math.round(a.getTime()/1e3),e=(a.getHours()+"").padStart(2,"0")+":"+(a.getMinutes()+"").padStart(2,"0"),f=a.getDate()+". "+(new Intl.DateTimeFormat("fi-FI",{month:"long"}).format(a)+"ta ")+a.getFullYear();return expect_true([()=>Object.isFrozen(c),()=>"Test1"===c.bird.species,()=>"Test2"===c.bird.family,()=>"Test3"===c.bird.order,()=>"Test4"===c.bird.thumbnailUrl,()=>c.date.getTime()===1567214553700,()=>c.unixTimestamp===d,()=>c.dateString===f,()=>c.timeString===e])};