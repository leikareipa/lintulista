"use strict";import{panic_if_not_type,throw_if_not_true}from"../../assert.js";import{Bird}from"../../bird.js";const placeholderThumbnailUrl="./img/placeholder-bird-thumbnail.png",observedImages=new Set(["./img/placeholder-bird-thumbnail.png"]);export function BirdThumbnail(a={}){function b(){observedImages.add(a.bird.thumbnailUrl)}BirdThumbnail.validate_props(a),observedImages.add(a.bird.nullThumbnailUrl);const c=React.createRef(),[d,e]=React.useState(()=>a.useLazyLoading&&!observedImages.has(a.bird.thumbnailUrl)?placeholderThumbnailUrl:a.bird.thumbnailUrl),[f]=React.useState(()=>a.useLazyLoading?new IntersectionObserver(([b])=>{b.isIntersecting&&(e(a.bird.thumbnailUrl),f.disconnect())}):null);return React.useEffect(()=>{d===a.bird.thumbnailUrl&&b()},[d]),React.useEffect(()=>{if(a.useLazyLoading){const d=(()=>{const a=window.innerHeight,b=c.current.getBoundingClientRect();return!!(b.top>-b.height&&b.top<a)})();if(d)b(),c.current.setAttribute("src",a.bird.thumbnailUrl);else if(f)return f.observe(c.current),()=>{f.disconnect()}}},[c.current]),React.createElement("img",{className:"BirdThumbnail",referrerPolicy:"no-referrer",src:d,ref:c})}BirdThumbnail.defaultProps={useLazyLoading:!0},BirdThumbnail.validate_props=function(a){panic_if_not_type("object",a,a.bird)},BirdThumbnail.test=()=>{let a={remove:()=>{}};try{a=document.createElement("div"),document.body.appendChild(a);const b=Bird({species:"Test1",family:"",order:"",thumbnailUrl:"nonexistent-test-image.png"});ReactTestUtils.act(()=>{const c=React.createElement(BirdThumbnail,{bird:b,useLazyLoading:!1});ReactDOM.unmountComponentAtNode(a),ReactDOM.render(c,a)}),throw_if_not_true([()=>1===a.childNodes.length]);const c=a.childNodes[0];throw_if_not_true([()=>"img"===c.tagName.toLowerCase(),()=>"nonexistent-test-image.png"===c.getAttribute("src"),()=>"no-referrer"===c.getAttribute("referrerpolicy")])}catch(a){if("assertion failure"===a)return!1;throw a}finally{a.remove()}return!0};