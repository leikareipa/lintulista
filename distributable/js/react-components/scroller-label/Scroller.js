"use strict";import{panic_if_not_type,throw_if_not_true}from"../../assert.js";import{delay}from"../../delay.js";export function Scroller(a={}){function b(){h?warn("The scroller started firing twice."):i(setInterval(d,e))}function c(){h&&(clearInterval(h),i(null))}function d(){a.callback()}Scroller.validateProps(a);const e=190,[f,g]=React.useState(null),[h,i]=React.useState(null),[j,k]=React.useState(!1);return React.useEffect(()=>{j?(d(),g(setTimeout(b,350))):(clearTimeout(f),g(null),c())},[j]),React.createElement("div",{className:`Scroller ${a.additionalClassName||""}`.trim(),onMouseDown:()=>k(!0),onMouseUp:()=>k(!1),onMouseLeave:()=>k(!1)},React.createElement("i",{className:a.icon}))}Scroller.defaultProps={symbol:"fas fa-question"},Scroller.validateProps=function(a){panic_if_not_type("function",a.callback)},Scroller.test=async()=>{let a={remove:()=>{}};try{a=document.createElement("div"),document.body.appendChild(a),a.style.display="none";let b=0;ReactTestUtils.act(()=>{const c=React.createElement(Scroller,{icon:"fas fa-caret-up fa-2x",additionalClassName:"up",callback:()=>{b++}});ReactDOM.unmountComponentAtNode(a),ReactDOM.render(c,a)});const c=a.querySelector(".Scroller.up");throw_if_not_true([()=>null!==c]),throw_if_not_true([()=>0==b]),ReactTestUtils.Simulate.mouseDown(c),ReactTestUtils.Simulate.mouseUp(c),throw_if_not_true([()=>1==b]),throw_if_not_true([()=>1==b]),ReactTestUtils.Simulate.mouseDown(c),await delay(700),ReactTestUtils.Simulate.mouseUp(c),throw_if_not_true([()=>2<b])}catch(a){if("assertion failure"===a)return!1;throw a}finally{a.remove()}return!0};